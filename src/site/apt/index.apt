  ------
  Introduction
  ------
  Dave Whitla <dave.whitla@ocean.net.au>
  ------
  September 1, 2008


Maven Glassfish Plugin

  The Maven Glassfish Plugin is a Maven2 plugin allowing management of Glassfish domains and component deployments from within the Maven build lifecycle.
  It encapsulates domain configuration and deployment attributes within the build configuration for a more rapid development integration loop
  and simplified management of continuous integration testing of components destined for deployment within the Glassfish V2 and later JavaEE containers.

* Goals Overview

  * {{{create-domain-mojo.html}glassfish:create-domain}} Create a new Glassfish domain. (Creating an existing domain will cause it to be deleted and recreated.)

  * {{{start-domain-mojo.html}glassfish:start-domain}} Start an existing Glassfish domain. (Starting a non-existent domain will cause it to be created.)

  * {{{deploy-mojo.html}glassfish:deploy}} Deploy JavaEE artifacts to a running domain. (Deploying to an inactive domain will cause it to be started and created if necessary.)

  * {{{redeploy-mojo.html}glassfish:redeploy}} Redeploy JavaEE artifacts to a running domain. (<<Cold>> redeployment by first calling <<<undeploy>>> and then <<<deploy>>>. Use <<<deploy>>> to effect a <<hot>> deployment.)

  * {{{undeploy-mojo.html}glassfish:undeploy}} Undeploy JavaEE components from a running domain.

  * {{{stop-domain-mojo.html}glassfish:stop-domain}} Stop a running Glassfish domain.

  * {{{delete-domain-mojo.html}glassfish:delete-domain}} Delete an existing Glassfish domain.

* Usage

  Instructions on how to use the Maven Glassfish Plugin can be found {{{usage.html}here}}.
  Intelligent IDEs, such as Intellij IDEA 8 also provide Maven plugin configuration autocompletion.

* Examples

  * {{{examples/complete.html}A single example demonstrating the use of all currently available configuration options}}

  * {{{examples/profiles.html}Using Maven profiles to provide alternate maven-glassfish-plugin mojo sequences in the default build, and to enable per-user configurations.}}


* Contributors

  The quality and professionalism of this project are enhanced by the generous contributions of the following vendors of software
  development tools, who continue to support open-source software through the donation of free licences:

  * Atlassian, providers of

    * {{{http://www.atlassian.com/software/jira}Atlassian JIRA}} issue tracking system

    * {{{http://www.atlassian.com/software/crucible}Atlassian Crucible}} team code review system

    * {{{http://www.atlassian.com/software/fisheye}Atlassian FishEye}} source code repository visualisation system


  * JetBrains, providers of

    * {{{http://www.jetbrains.com/idea/}IntelliJ IDEA}} Java IDE

    * {{{http://www.jetbrains.com/teamcity/}TeamCity}} continuous integration system

